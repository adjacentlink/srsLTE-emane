diff --git a/srsue/hdr/phy/phch_recv.h b/srsue/hdr/phy/phch_recv.h
index 78559d3c..4d1c68e9 100644
--- a/srsue/hdr/phy/phch_recv.h
+++ b/srsue/hdr/phy/phch_recv.h
@@ -309,6 +309,7 @@ private:
     state_t run_state() {
       pthread_mutex_lock(&inside);
       cur_state = next_state;
+      go_state_pending = true;
       pthread_cond_broadcast(&cvar);
       pthread_mutex_unlock(&inside);
       return cur_state;
@@ -317,6 +318,11 @@ private:
     // Called by the main thread at the end of each state to indicate it has finished.
     void state_exit(bool exit_ok = true) {
       pthread_mutex_lock(&inside);
+      while(go_state_pending) {
+        fprintf(stderr, "%s curr_state %d, next_state %d\n", 
+                __func__, cur_state, next_state);
+        pthread_cond_wait(&pvar, &inside);
+      }
       if (cur_state == SFN_SYNC && exit_ok == true) {
         next_state = CAMPING;
       } else {
@@ -383,6 +389,8 @@ private:
       pthread_cond_init(&cvar, NULL);
       cur_state = IDLE;
       next_state = IDLE;
+      pthread_cond_init(&pvar, NULL);
+      go_state_pending = false;
     }
    private:
 
@@ -392,6 +400,8 @@ private:
       while(cur_state != s) {
         pthread_cond_wait(&cvar, &inside);
       }
+      go_state_pending = false;
+      pthread_cond_broadcast(&pvar);
       pthread_mutex_unlock(&inside);
     }
 
@@ -407,6 +417,8 @@ private:
     state_t cur_state, next_state;
     pthread_mutex_t inside, outside;
     pthread_cond_t  cvar;
+    pthread_cond_t  pvar;
+    bool go_state_pending;
 
   };
 

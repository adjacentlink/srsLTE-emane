diff --git a/README.md b/README.md
index 0d2e4f4..e20d707 100644
--- a/README.md
+++ b/README.md
@@ -28,7 +28,7 @@ version is 19.09, the first release based on srsLTE 19.09
 3. Build and install srsLTE-emane:
    * [Centos 7](#centos-7)
    * [Fedora 31](#fedora-31)
-   * [Ubuntu 16.04 and 18.04](#ubuntu-1604-and-1804)
+   * [Ubuntu 18.04 and 20.04](#ubuntu-1804-and-2004)
 
 
 ### Centos 7
@@ -57,7 +57,7 @@ make package
 sudo dnf install srslte-emane-*-x86_64.rpm
 ```
 
-### Ubuntu 16.04 and 18.04
+### Ubuntu 18.04 and 20.04
 
 ```
 sudo apt-get install cmake libfftw3-dev libmbedtls-dev libboost-program-options-dev libconfig++-dev libsctp-dev lsb-release
diff --git a/cmake/modules/SRSLTEPackage.cmake b/cmake/modules/SRSLTEPackage.cmake
index 3fd26db..b0cff0b 100644
--- a/cmake/modules/SRSLTEPackage.cmake
+++ b/cmake/modules/SRSLTEPackage.cmake
@@ -1,18 +1,30 @@
-SET(CPACK_PACKAGE_DESCRIPTION "srsLTE")
-SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "LTE library for SDR.")
-SET(CPACK_PACKAGE_NAME "srslte")
-SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6 (>= 2.3.6), libgcc1 (>= 1:4.1), libboost-dev (>= 1.35)")
+SET(CPACK_PACKAGE_DESCRIPTION "srsLTE EMANE")
+SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "LTE library integrated with EMANE.")
+SET(CPACK_PACKAGE_NAME "srslte-emane")
 
 SET(CPACK_PACKAGE_CONTACT "Ismael Gomez ")
 SET(CPACK_PACKAGE_VENDOR "Software Radio Systems Limited")
 SET(CPACK_PACKAGE_VERSION_MAJOR ${SRSLTE_VERSION_MAJOR})
 SET(CPACK_PACKAGE_VERSION_MINOR ${SRSLTE_VERSION_MINOR})
+SET(CPACK_PACKAGE_VERSION_EMANE 1)
 SET(CPACK_PACKAGE_VERSION_PATCH ${SRSLTE_VERSION_PATCH})
-SET(VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
+SET(VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_EMANE}-${CPACK_PACKAGE_VERSION_PATCH}")
 
 ########################################################################
 # Setup additional defines for OS types
 ########################################################################
+find_program(LSB_RELEASE_EXEC lsb_release)
+execute_process(COMMAND ${LSB_RELEASE_EXEC} -is
+  OUTPUT_VARIABLE LSB_RELEASE_ID_SHORT
+  OUTPUT_STRIP_TRAILING_WHITESPACE
+  )
+
+execute_process(COMMAND ${LSB_RELEASE_EXEC} -rs
+  OUTPUT_VARIABLE LSB_RELEASE_VERSION_SHORT
+  OUTPUT_STRIP_TRAILING_WHITESPACE
+  )
+
+
 IF(CMAKE_SYSTEM_NAME STREQUAL "Linux")
     SET(LINUX TRUE)
 ENDIF()
@@ -45,12 +57,22 @@ ENDIF()
 ########################################################################
 # Setup CPack Debian
 ########################################################################
-SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libboost-dev")
+IF(LSB_RELEASE_ID_SHORT STREQUAL "Ubuntu")
+  IF(LSB_RELEASE_VERSION_SHORT STREQUAL "16.04")
+    SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6 (>= 2.3.6), libgcc1 (>= 1:4.1), emane-model-lte, libfftw3-single3, libboost-program-options1.58.0, libmbedcrypto0, libconfig++9v5, libsctp1, libuhd003")
+  ELSEIF(LSB_RELEASE_VERSION_SHORT STREQUAL "18.04")
+    SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6 (>= 2.3.6), libgcc1 (>= 1:4.1), emane-model-lte, libfftw3-single3, libboost-program-options1.65.1, libmbedcrypto1, libconfig++9v5, libsctp1, libuhd003.010.003")
+  ELSEIF(LSB_RELEASE_VERSION_SHORT STREQUAL "20.04")
+    SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6 (>= 2.3.6), libgcc1 (>= 1:4.1), emane-model-lte, libfftw3-single3, libboost-program-options1.65.1, libmbedcrypto1, libconfig++9v5, libsctp1, libuhd3.15.0")
+  ELSE()
+    message(FATAL_ERROR "Unsupported Ubuntu Version. Quitting.")
+  ENDIF()
+ENDIF()
 
 ########################################################################
 # Setup CPack RPM
 ########################################################################
-SET(CPACK_RPM_PACKAGE_REQUIRES "boost-devel")
+SET(CPACK_RPM_PACKAGE_REQUIRES "emane-model-lte fftw-libs-single boost-program-options mbedtls libconfig lksctp-tools uhd")
 
 ########################################################################
 # Setup CPack NSIS
@@ -58,6 +80,6 @@ SET(CPACK_RPM_PACKAGE_REQUIRES "boost-devel")
 SET(CPACK_NSIS_MODIFY_PATH ON)
 
 
-SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}-${CMAKE_SYSTEM_PROCESSOR}")
+SET(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_EMANE}-${CMAKE_SYSTEM_PROCESSOR}")
 INCLUDE(CPack)
 
